import { OpenAPIV3_1 } from 'openapi-types';
import { DataSchemaArray } from './types/endpoint.js';
export declare const convertSchema: (path: string[], schema: OpenAPIV3_1.SchemaObject | undefined, required?: boolean) => DataSchemaArray;
export declare const combineTopLevelSchemas: (path: string[], schema1: OpenAPIV3_1.SchemaObject, schema2: OpenAPIV3_1.SchemaObject) => OpenAPIV3_1.SchemaObject;
export declare const addKeyIfDefined: <D, K extends keyof D>(key: K, value: D[K], destination: D) => void;
export declare const copyKeyIfDefined: <D, K extends keyof D>(key: K, source: Pick<D, K>, destination: D) => void;
export declare const convertProperties: (path: string[], properties: {
    [key: string]: OpenAPIV3_1.SchemaObject;
} | undefined, required?: string[]) => {
    [key: string]: DataSchemaArray;
};
