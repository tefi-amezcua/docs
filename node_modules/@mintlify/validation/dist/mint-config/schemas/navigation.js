import { z } from 'zod';
// export to allow type testing against @mintlify/models
export var baseNavigationGroupSchema = z
    .object({
    // We allow top-level groups to be an empty string if the user wants to hide the title.
    // Future work should refactor this so nested groups are non-empty strings.
    group: z.string({
        required_error: 'Missing navigation group name.',
        invalid_type_error: 'Group must be a string. We use the group name to create the navigation sidebar.',
    }),
    icon: z.string({ invalid_type_error: 'Icon must be a string.' }).optional(),
    version: z.string({ invalid_type_error: 'Version must be a string.' }).optional(),
}, { invalid_type_error: 'Navigation entry must be an object.' })
    .strict('Navigation entry can only contain group, pages, icon, and version.');
var navigationGroupSchema = baseNavigationGroupSchema.extend({
    pages: z.lazy(function () {
        return z
            .array(z.union([navigationGroupSchema, z.string().min(1, 'Page cannot be an empty string.')]))
            .min(1, "Pages array can't be empty.");
    }),
});
export var navigationSchema = z
    .array(navigationGroupSchema, {
    required_error: 'Navigation is missing.',
    invalid_type_error: 'Navigation must be an array.',
})
    .min(1, 'Navigation cannot be an empty array. Please add at least one group.');
